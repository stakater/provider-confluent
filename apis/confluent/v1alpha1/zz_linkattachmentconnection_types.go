// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LinkAttachmentConnectionAwsInitParameters struct {

	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	VPCEndpointID *string `json:"vpcEndpointId,omitempty" tf:"vpc_endpoint_id,omitempty"`
}

type LinkAttachmentConnectionAwsObservation struct {

	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	VPCEndpointID *string `json:"vpcEndpointId,omitempty" tf:"vpc_endpoint_id,omitempty"`
}

type LinkAttachmentConnectionAwsParameters struct {

	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	// +kubebuilder:validation:Optional
	VPCEndpointID *string `json:"vpcEndpointId" tf:"vpc_endpoint_id,omitempty"`
}

type LinkAttachmentConnectionAzureInitParameters struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// Resource Id of the PrivateEndpoint that is connected to the PrivateLink service.
	PrivateEndpointResourceID *string `json:"privateEndpointResourceId,omitempty" tf:"private_endpoint_resource_id,omitempty"`
}

type LinkAttachmentConnectionAzureObservation struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// Resource Id of the PrivateEndpoint that is connected to the PrivateLink service.
	PrivateEndpointResourceID *string `json:"privateEndpointResourceId,omitempty" tf:"private_endpoint_resource_id,omitempty"`
}

type LinkAttachmentConnectionAzureParameters struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// Resource Id of the PrivateEndpoint that is connected to the PrivateLink service.
	// +kubebuilder:validation:Optional
	PrivateEndpointResourceID *string `json:"privateEndpointResourceId" tf:"private_endpoint_resource_id,omitempty"`
}

type LinkAttachmentConnectionEnvironmentInitParameters struct {
}

type LinkAttachmentConnectionEnvironmentObservation struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// The unique identifier for the environment.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type LinkAttachmentConnectionEnvironmentParameters struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// The unique identifier for the environment.
	// +crossplane:generate:reference:type=github.com/stakater/provider-confluent/apis/confluent/v1alpha1.Environment
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Reference to a Environment in confluent to populate id.
	// +kubebuilder:validation:Optional
	IDRef *v1.Reference `json:"idRef,omitempty" tf:"-"`

	// Selector for a Environment in confluent to populate id.
	// +kubebuilder:validation:Optional
	IDSelector *v1.Selector `json:"idSelector,omitempty" tf:"-"`
}

type LinkAttachmentConnectionGCPInitParameters struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// Id of the Private Service connection.
	PrivateServiceConnectConnectionID *string `json:"privateServiceConnectConnectionId,omitempty" tf:"private_service_connect_connection_id,omitempty"`
}

type LinkAttachmentConnectionGCPObservation struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// Id of the Private Service connection.
	PrivateServiceConnectConnectionID *string `json:"privateServiceConnectConnectionId,omitempty" tf:"private_service_connect_connection_id,omitempty"`
}

type LinkAttachmentConnectionGCPParameters struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// Id of the Private Service connection.
	// +kubebuilder:validation:Optional
	PrivateServiceConnectConnectionID *string `json:"privateServiceConnectConnectionId" tf:"private_service_connect_connection_id,omitempty"`
}

type LinkAttachmentConnectionInitParameters struct {

	// supports the following:
	Aws []LinkAttachmentConnectionAwsInitParameters `json:"aws,omitempty" tf:"aws,omitempty"`

	Azure []LinkAttachmentConnectionAzureInitParameters `json:"azure,omitempty" tf:"azure,omitempty"`

	// The name of the Private Link Attachment Connection.
	// The name of the Private Link Attachment Connection.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// supports the following:
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment []LinkAttachmentConnectionEnvironmentInitParameters `json:"environment,omitempty" tf:"environment,omitempty"`

	GCP []LinkAttachmentConnectionGCPInitParameters `json:"gcp,omitempty" tf:"gcp,omitempty"`

	// supports the following:
	// The private_link_attachment to which this belongs.
	PrivateLinkAttachment []LinkAttachmentConnectionPrivateLinkAttachmentInitParameters `json:"privateLinkAttachment,omitempty" tf:"private_link_attachment,omitempty"`
}

type LinkAttachmentConnectionObservation struct {

	// supports the following:
	Aws []LinkAttachmentConnectionAwsObservation `json:"aws,omitempty" tf:"aws,omitempty"`

	Azure []LinkAttachmentConnectionAzureObservation `json:"azure,omitempty" tf:"azure,omitempty"`

	// The name of the Private Link Attachment Connection.
	// The name of the Private Link Attachment Connection.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// supports the following:
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment []LinkAttachmentConnectionEnvironmentObservation `json:"environment,omitempty" tf:"environment,omitempty"`

	GCP []LinkAttachmentConnectionGCPObservation `json:"gcp,omitempty" tf:"gcp,omitempty"`

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// supports the following:
	// The private_link_attachment to which this belongs.
	PrivateLinkAttachment []LinkAttachmentConnectionPrivateLinkAttachmentObservation `json:"privateLinkAttachment,omitempty" tf:"private_link_attachment,omitempty"`

	// The Confluent Resource Name of the Private Link Attachment Connection, for example crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-75gxp2/private-link-attachment=platt-1q0ky0/private-link-attachment-connection=plattc-77zq2w.
	ResourceName *string `json:"resourceName,omitempty" tf:"resource_name,omitempty"`
}

type LinkAttachmentConnectionParameters struct {

	// supports the following:
	// +kubebuilder:validation:Optional
	Aws []LinkAttachmentConnectionAwsParameters `json:"aws,omitempty" tf:"aws,omitempty"`

	// +kubebuilder:validation:Optional
	Azure []LinkAttachmentConnectionAzureParameters `json:"azure,omitempty" tf:"azure,omitempty"`

	// The name of the Private Link Attachment Connection.
	// The name of the Private Link Attachment Connection.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// supports the following:
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	// +kubebuilder:validation:Optional
	Environment []LinkAttachmentConnectionEnvironmentParameters `json:"environment,omitempty" tf:"environment,omitempty"`

	// +kubebuilder:validation:Optional
	GCP []LinkAttachmentConnectionGCPParameters `json:"gcp,omitempty" tf:"gcp,omitempty"`

	// supports the following:
	// The private_link_attachment to which this belongs.
	// +kubebuilder:validation:Optional
	PrivateLinkAttachment []LinkAttachmentConnectionPrivateLinkAttachmentParameters `json:"privateLinkAttachment,omitempty" tf:"private_link_attachment,omitempty"`
}

type LinkAttachmentConnectionPrivateLinkAttachmentInitParameters struct {
}

type LinkAttachmentConnectionPrivateLinkAttachmentObservation struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// The unique identifier for the private link attachment.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type LinkAttachmentConnectionPrivateLinkAttachmentParameters struct {

	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example env-xyz456.
	// The unique identifier for the private link attachment.
	// +crossplane:generate:reference:type=github.com/stakater/provider-confluent/apis/confluent/v1alpha1.PrivateLinkAttachment
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Reference to a PrivateLinkAttachment in confluent to populate id.
	// +kubebuilder:validation:Optional
	IDRef *v1.Reference `json:"idRef,omitempty" tf:"-"`

	// Selector for a PrivateLinkAttachment in confluent to populate id.
	// +kubebuilder:validation:Optional
	IDSelector *v1.Selector `json:"idSelector,omitempty" tf:"-"`
}

// LinkAttachmentConnectionSpec defines the desired state of LinkAttachmentConnection
type LinkAttachmentConnectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LinkAttachmentConnectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LinkAttachmentConnectionInitParameters `json:"initProvider,omitempty"`
}

// LinkAttachmentConnectionStatus defines the observed state of LinkAttachmentConnection.
type LinkAttachmentConnectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LinkAttachmentConnectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LinkAttachmentConnection is the Schema for the LinkAttachmentConnections API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,confluent}
type LinkAttachmentConnection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.environment) || (has(self.initProvider) && has(self.initProvider.environment))",message="spec.forProvider.environment is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.privateLinkAttachment) || (has(self.initProvider) && has(self.initProvider.privateLinkAttachment))",message="spec.forProvider.privateLinkAttachment is a required parameter"
	Spec   LinkAttachmentConnectionSpec   `json:"spec"`
	Status LinkAttachmentConnectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LinkAttachmentConnectionList contains a list of LinkAttachmentConnections
type LinkAttachmentConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LinkAttachmentConnection `json:"items"`
}

// Repository type metadata.
var (
	LinkAttachmentConnection_Kind             = "LinkAttachmentConnection"
	LinkAttachmentConnection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LinkAttachmentConnection_Kind}.String()
	LinkAttachmentConnection_KindAPIVersion   = LinkAttachmentConnection_Kind + "." + CRDGroupVersion.String()
	LinkAttachmentConnection_GroupVersionKind = CRDGroupVersion.WithKind(LinkAttachmentConnection_Kind)
)

func init() {
	SchemeBuilder.Register(&LinkAttachmentConnection{}, &LinkAttachmentConnectionList{})
}
